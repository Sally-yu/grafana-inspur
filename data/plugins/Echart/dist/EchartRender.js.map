{"version":3,"sources":["../src/EchartRender.js"],"names":["link","scope","elem","attrs","ctrl","container","find","events","on","render","renderingCompleted","codetText","panel","code","chartMode","ChartMode","data","map","echarts","registerTheme","dark","init","console","log","JSON","stringify","lastData","allData","legend","length","forEach","serie","lastPoint","datapoints","lastValue","_","isArray","lastTime","target","push","valueList","timeList","tempValue","tempTime","kv","Date","toLocaleString","pieSer","value","name","lineSer","i","tempDic","type","stack","areaStyle","values","label","normal","show","showLabel","position","optionPie","title","text","subtext","x","tooltip","trigger","formatter","orient","right","top","bottom","selected","series","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","optionLine","textStyle","color","axisPointer","backgroundColor","grid","left","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","yAxis","optionRadar","option","clear","setOption","opts","width","height","silent","resize"],"mappings":"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","file":"EchartRender.js","sourcesContent":["import echarts from './lib/echarts.min';\r\nimport _ from 'lodash';\r\nimport dark from  './lib/dark';\r\n\r\nexport default function link(scope, elem, attrs, ctrl,) {\r\n    const container = elem.find('.echarts-panel');\r\n    ctrl.events.on('render', () => {\r\n        render();\r\n        ctrl.renderingCompleted();\r\n    });\r\n\r\n    function render() {\r\n        const codetText=ctrl.panel.code;\r\n        const chartMode=ctrl.panel.ChartMode;\r\n\r\n        if (!ctrl.data) return;\r\n\r\n        if (!ctrl.map) {\r\n        }\r\n\r\n\r\n        // console.log('dark:'+JSON.stringify(dark));//json格式，当变量写入到js文件中读取，\r\n\r\n        echarts.registerTheme('dark', dark);\r\n        ctrl.map = echarts.init(container[0],'dark');//使用echart官方主题\r\n\r\n        console.log('ctrl.data:'+JSON.stringify(ctrl.data));\r\n\r\n        //在Echart_Ctrl的data，\r\n        // console.log('code:'+codetText);\r\n        // console.log('chartMode:'+chartMode);\r\n        // console.log('**************'+JSON.stringify(ctrl.data));//传入ctrl的datalist 查询到的所有数据\r\n\r\n\r\n        var lastData = [];//最后时刻数据\r\n        var allData = [];//全部value time [[[v,t],[v,t],[v,t]...],[[v,t],[v,t],[v,t]...]]\r\n        var legend=[];//每个查询名称\r\n\r\n        //处理查询数据库得到的数据\r\n        if (ctrl.data && ctrl.data.length > 0) {\r\n            ctrl.data.forEach((serie) => {\r\n                const lastPoint = serie.datapoints[serie.datapoints.length - 1];  //最后时刻点[value,time]\r\n                const lastValue = _.isArray(lastPoint) ? lastPoint[0] : null; //最后时刻value\r\n                const lastTime = _.isArray(lastPoint) ? lastPoint[1] : null; //最后时刻time\r\n\r\n                const target =serie.target;//查询的名称，查询页面可设置\r\n\r\n                lastData.push({ \"value\": lastValue==null ? 100:lastValue, \"time\": lastTime, \"name\":target}); //每个serie装一对值和时间\r\n                legend.push(target);\r\n                allData.push(serie.datapoints);//每个查询一个数组\r\n                });\r\n        }\r\n\r\n        var valueList=[];//每个查询的值\r\n        var timeList=[];//每个查询的时刻\r\n\r\n        //装到值数组和时间数组\r\n        allData.forEach((serie)=>{\r\n            const tempValue=[];\r\n            const tempTime=[];\r\n\r\n            serie.forEach((kv)=>{\r\n                tempTime.push(new Date(kv[1]).toLocaleString());\r\n                tempValue.push(kv[0]);\r\n            });\r\n            valueList.push(tempValue);\r\n            timeList.push(tempTime);\r\n        });\r\n\r\n        console.log('lastdata:'+JSON.stringify(lastData));\r\n        console.log('legend:'+JSON.stringify(legend));\r\n        console.log('valueList:'+JSON.stringify(valueList));\r\n        console.log('timeList:'+JSON.stringify(timeList));\r\n\r\n        var pieSer=[];//饼图series中的data\r\n        lastData.forEach((data)=>{\r\n            pieSer.push({\r\n                value:data['value'],\r\n                name:data['name']\r\n            });\r\n        });\r\n\r\n        var lineSer=[];//折线用的series\r\n        for(var i=0;i<legend.length;i++){\r\n            var tempDic={\r\n                name:legend[i],\r\n                type:'line',\r\n                stack: '',\r\n                data:valueList[i],\r\n                areaStyle:ctrl.panel.areaStyle.values? {}:null,//颜色填充\r\n                label: {                     //数值标签\r\n                    normal: {\r\n                        show: ctrl.panel.showLabel.values,\r\n                        position: 'top'\r\n                    }\r\n                },\r\n            };\r\n            lineSer.push(tempDic);\r\n        }\r\n\r\n        console.log('linSer:'+JSON.stringify(lineSer));\r\n        //饼图\r\n        var optionPie = {\r\n            title : {\r\n                text: '',\r\n                subtext: '',\r\n                x:'center'\r\n            },\r\n            tooltip : {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                type: 'scroll',\r\n                orient: 'vertical',\r\n                right: 10,\r\n                top: 20,\r\n                bottom: 20,\r\n                data: legend,\r\n        \r\n                selected: legend\r\n            },\r\n            series : [\r\n                {\r\n                    name: '占用',\r\n                    type: 'pie',\r\n                    radius : '55%',\r\n                    center: ['40%', '50%'],\r\n                    data: pieSer,\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n        //折线图\r\n        var optionLine = {\r\n            title: {\r\n                text: '',\r\n                textStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: '#6a7985'\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                // data:['邮件营销','联盟广告','视频广告','直接访问','搜索引擎']\r\n                data:legend\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                // data: ['周一','周二','周三','周四','周五','周六','周日']\r\n                data:timeList[0]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series:lineSer\r\n        };\r\n        \r\n        var optionRadar={\r\n\r\n        }\r\n\r\n\r\n        //选图表类型，页面上可选 editor.tml中\r\n        let option={};\r\n        switch(chartMode){\r\n            case 'line':\r\n            option=optionLine;\r\n            break;\r\n            case 'pie':\r\n            option=optionPie;\r\n            default:\r\n            break;\r\n        }\r\n        \r\n        //清除原图表以刷新\r\n        ctrl.map.clear();\r\n        ctrl.map.setOption(option);\r\n\r\n        var opts = {\r\n            width: 'auto',\r\n            height: ctrl.height,\r\n            silent: false\r\n        }\r\n\r\n        ctrl.map.resize(opts);\r\n\r\n\r\n        /*\r\n        if (ctrl.mapCenterMoved) ctrl.map.panToMapCenter();\r\n    \r\n        if (!ctrl.map.legend && ctrl.panel.showLegend) ctrl.map.createLegend();\r\n    \r\n        ctrl.map.drawCircles();\r\n        */\r\n\r\n    }\r\n}"]}